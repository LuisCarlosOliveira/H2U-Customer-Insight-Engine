/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'jacoco'
    id 'pmd'
}

/* jar {
    manifest {
        attributes 'Specification-Title':'HelloWorld - Eng. Software'
        attributes 'Specification-Version':'1.0'
        attributes 'Specification-Vendor':'ESTG'
        attributes 'Implementation-Title':'hello.HelloWorld'
        attributes 'Implementation-Version':'build01'
        attributes 'Implementation-Vendor':'ESTG'
        attributes 'Main-Class': 'gradleExample.HelloWorld'
    }
    from{
        configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)}
    }
} 

build.finalizedBy zip, javadoc 

 task zip(type: Zip, group:'Archive',description:"Archives sources in a zip file"){
    destinationDirectory = file(".")
    archiveFileName = "backup.zip"
    from "src";
} */


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    implementation 'com.google.guava:guava:31.0.1-jre'
    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.7.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    
}
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testLogging { events "passed", "skipped", "failed", "standardOut", "standardError" }
    //finalizedBy jacocoTestReport // report is always generated after tests run
}
jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('/reports/jacocoHtml')

    }
} 


pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSets = []
    ruleSetFiles = files("pmdRules/rules.xml")
}

/*
application {
    // Define the main class for the application.
  mainClass = 'Hotel.Menus'
}
*/

jar {
    manifest {
        attributes "Main-Class": "Hotel.Menus"
    }
}



